datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Usuario {
  id           Int              @id @default(autoincrement())
  nome         String           @db.VarChar(99)
  email        String           @unique @db.VarChar(99)
  senha        String           @db.VarChar(99)
  cep          String           @db.VarChar(99)
  rua          String           @db.VarChar(99)
  cidade       String           @db.VarChar(99)
  estado       EstadoEnum
  escola       String           @db.VarChar(100)
  data_nasc    DateTime
  escolaridade EscolaridadeEnum
  sexo         SexoEnum
  adm          Boolean?         @default(false) // Valor padrão "false"
  conquistas   Conquistas?

  createdAt     DateTime       @default(now()) // Data de criação do usuário
  updatedAt     DateTime       @updatedAt // Data de última atualização do usuário
  refreshTokens RefreshToken[] @relation("UserRefreshTokens") // Relação com tokens de refresh
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  token     String   @db.Text
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  expiresAt DateTime

  user Usuario @relation("UserRefreshTokens", fields: [userId], references: [id])

  @@unique([userId, token]) // Define uma chave única composta
}


model BlacklistedToken {
  id        Int      @id @default(autoincrement())
  token     String   @db.Text
  createdAt DateTime @default(now())
  expiresAt DateTime
}

model Conquistas {
  fk_id_usuario Int     @id
  conquista_1   Boolean
  conquista_2   Boolean
  conquista_3   Boolean
  usuario       Usuario @relation(fields: [fk_id_usuario], references: [id])
}

model FaleConosco {
  id       Int    @id @default(autoincrement())
  nome     String @db.VarChar(99)
  email    String @db.VarChar(99)
  assunto  String @db.VarChar(99)
  mensagem String @db.Text
}

model Videos {
  id         Int     @id @default(autoincrement())
  video_link String? @db.Text
}

model Livros {
  id         Int     @id @default(autoincrement())
  livro_link String? @db.Text
}

enum EstadoEnum {
  E
  AC
  AL
  AP
  AM
  BA
  CE
  DF
  ES
  GO
  NA
  MT
  MS
  MG
  PA
  PB
  PR
  PE
  PI
  RJ
  RN
  RS
  RO
  RR
  SC
  SP
  SE
  TO
}

enum EscolaridadeEnum {
  ENSINO_FUNDAMENTAL_I
  ENSINO_FUNDAMENTAL_II
  ENSINO_MEDIO
  OUTROS
}

enum SexoEnum {
  MASCULINO
  FEMININO
  NAO_DECLARAR
}
