const AlterData: React.FC = () => {
  const [error, setError] = useState<string | null>(null);
  const [isSubmitting, setIsSubmitting] = useState(false);
  const { registerUser } = useAlter();
  const router = useRouter();
  const formRef = useRef<HTMLFormElement>(null);

  const {
    userName,
    userDataNasc,
    userSexo,
    userCep,
    userEstado,
    userCidade,
    userRua,
    isLoading,
  } = useUser();

  useEffect(() => {
    console.log("Component mounted, form ref:", formRef.current);
  }, []);

  const handleAlter = useCallback(async (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    e.stopPropagation();
    console.log("handleAlter called");
    setIsSubmitting(true);
    setError(null);

    // Use the event target instead of formRef
    const form = e.target as HTMLFormElement;
    console.log("Form element:", form);

    const formData = new FormData(form);
    console.log("FormData created");

    const updates = {
      nome: formData.get("nome")?.toString() || "",
      email: formData.get("email")?.toString() || "",
      senha: formData.get("senha")?.toString() || "",
      cep: formData.get("cep")?.toString() || "",
      rua: formData.get("rua")?.toString() || "",
      cidade: formData.get("cidade")?.toString() || "",
      estado: formData.get("estado")?.toString() || "",
      escola: formData.get("escola")?.toString() || "",
      data_nasc: formData.get("data_nasc")?.toString() || "",
      escolaridade: formData.get("escolaridade")?.toString() || "",
      sexo: formData.get("sexo")?.toString() || ""
    };

    console.log("Updates collected:", updates);

    try {
      console.log("Calling registerUser");
      const result = await registerUser(updates);
      console.log('Resultado da alteração:', result);
      if (result.success) {
        console.log('Dados alterados com sucesso');
        router.push('/');
      } else {
        setError(result.message || 'Erro ao alterar os dados do usuário');
      }
    } catch (error: any) {
      console.error('Erro ao alterar dados:', error);
      setError(error.message || 'Houve um erro ao alterar os dados do usuário');
    } finally {
      setIsSubmitting(false);
    }
  }, [registerUser, router]);